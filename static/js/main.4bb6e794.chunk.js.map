{"version":3,"sources":["Utils/tools.js","reducer.js","component/Nav.js","component/pages/Layout.js","customUses/index.js","customUses/ApiKey.js","customUses/useFetchData.js","component/pages/Login.js","component/pages/Add.js","component/MonthPicker.js","component/Styled/StyledSpinner.js","component/Styled/StyledReactModal.js","component/pages/ModifyList.js","component/pages/List.js","Routes.js","serviceWorker.js","index.js","App.js"],"names":["abstractAccount","email","replace","checkCutoffDateIsNextMonth","cutoffDate","moment","date","selectedMonth","year","month","newCutoffMonthArray","i","add","push","nowCutoffMonth","get","lastMonthCutoffMonth","cutoffMonthValue","initialState","fromJS","account","addType","originCutoffDate","sendData","format","cufoffMonth","payType","advanced","itemType","detail","cash","nonCash","amount","initSendData","reducer","state","action","type","set","value","isCutoffDateChange","setIn","path","data","ContextStore","React","createContext","useStyles","makeStyles","theme","root","flex","menuButton","marginRight","spacing","title","textAlign","borderRadius","active","background","padding","marginLeft","ButtonAppBar","classes","useContext","className","AppBar","Toolbar","FormControl","TextField","margin","label","defaultValue","Typography","variant","exact","activeClassName","to","StyledLayout","styled","div","NavContainer","Container","withRouter","children","firebaseApp","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apiGetData","api","useState","List","fetchData","setfetchData","isLoading","setIsLoading","fetchApiFunc","array","once","res","val","key","hasOwnProperty","element","Map","merge","defaultFetchFunc","ref","StyledLogin","history","localStorage","getItem","setAccount","password","setPassword","dispatch","onChange","event","target","Button","color","onClick","auth","signInWithEmailAndPassword","apiLogin","then","setItem","accountName","user","catch","error","alert","StyledAdd","pathname","location","onModalClose","useEffect","onSendHandler","validEmpty","window","validNumber","cutoffMonth","toJS","apiAddData","remove","update","apiEditData","delete","onDeleteHandler","apiDeleteData","Number","modifyAddSendData","e","stopPropagation","stopPropagationClick","utils","DateFnsUtils","disableToolbar","formatDate","handleDateChange","KeyboardButtonProps","InputLabel","htmlFor","Select","labelId","InputLabelProps","shrink","map","index","MenuItem","handleAmountChange","confirm","StyledMonthPicker","props","handleMonthSelected","StyledSpinner","StyledReactModal","isOpen","noop","escClick","useCallback","keyCode","document","addEventListener","removeEventListener","CSSTransition","classNames","in","timeout","unmountOnExit","table","isAdvanced","openModal","setOpenModal","calculaAmount","totalCash","totalNonCach","totalAmount","list","MonthPicker","TableContainer","component","Paper","Table","size","aria-label","stickyheader","stickyfooter","TableHead","TableRow","TableCell","align","colSpan","TableBody","row","modalOpenhandler","rowSpan","scope","Add","Routes","render","Login","Layout","from","pathName","onAuthStateChanged","Boolean","hostname","match","ReactDOM","useReducer","Provider","version","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bb6e794.chunk.js","sourcesContent":["import moment from \"moment\"\nimport get from \"lodash/get\"\n\nexport const abstractAccount = email => email.replace(/@.*$/, \"\")\n\nexport const checkCutoffDateIsNextMonth = (cutoffDate) => {\n    return moment().date() > cutoffDate ? true : false\n}\n\nexport const cutoffMonthValue = (cutoffDate) => {\n    let newCutoffMonthArray = []\n    let nowCutoffMonth\n    let lastMonthCutoffMonth\n    for (let i = -1; i < 2; i++) {\n        const year = moment().add(`${checkCutoffDateIsNextMonth(cutoffDate) ? i + 1 : i}`, 'month').year()\n        const month = moment().add(`${checkCutoffDateIsNextMonth(cutoffDate) ? i + 1 : i}`, 'month').month() + 1\n        newCutoffMonthArray.push(`${year}-${month}`)\n    }\n\n    nowCutoffMonth = get(newCutoffMonthArray, 1)\n    lastMonthCutoffMonth = get(newCutoffMonthArray, 0)\n    return { newCutoffMonthArray, nowCutoffMonth, lastMonthCutoffMonth }\n}\n","/* eslint-disable no-case-declarations */\nimport React from 'react';\nimport { fromJS } from 'immutable';\nimport moment from \"moment\"\n// import { fromJS } from 'immutable';  \n\nimport { cutoffMonthValue } from \"Utils/tools\"\n\n//constants\nconst INIT_USER = 'INIT_USER'\nconst SET_SELECTED_MONTH = \"SET_SELECTED_MONTH\"\nconst MODIFYDATA = \"MODIFYDATA\"\nconst INIT_SEND_DATA = \"INIT_SEND_DATA\"\nconst selectedMonth = `${moment().year()}-${moment().month() + 1}`\nconst INIT_MODAL_OPEN = 'INIT_MODAL_OPEN'\nconst cutoffDate = 19\nexport const { newCutoffMonthArray, nowCutoffMonth } = cutoffMonthValue(cutoffDate)\n\nconst initialState = fromJS({\n    account: \"\",\n    cutoffDate,\n    selectedMonth,\n    addType: \"add\",\n    originCutoffDate: \"\",\n    sendData: {\n        date: moment().format('YYYY/MM/D'),\n        cufoffMonth: nowCutoffMonth,\n        payType: 0,\n        advanced: 0,\n        itemType: \"\",\n        detail: \"\",\n        cash: 0,\n        nonCash: 0,\n        amount: 0\n    }\n});\n\n\nconst initSendData = fromJS({\n    date: moment().format('YYYY/MM/D'),\n    cufoffMonth: nowCutoffMonth,\n    payType: 0,\n    advanced: 0,\n    itemType: \"\",\n    detail: \"\",\n    amount: 0,\n    cash: 0,\n    nonCash: 0,\n})\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case INIT_USER:\n            return state.set('account', action.value)\n        case INIT_SEND_DATA:\n            return state.set('sendData', initSendData).set('addType', 'add')\n        case SET_SELECTED_MONTH:\n            return state.set(\"selectedMonth\", action.value)\n        case MODIFYDATA:\n           return action.isCutoffDateChange?state.setIn([...action.value.path], action.value.value).set('isCutoffDateChange', true):state.setIn([...action.value.path], action.value.value)\n        case INIT_MODAL_OPEN:\n            return state.set('sendData', action.data).set('addType', 'edit').set('originCutoffDate',  action.cufoffMonth)\n        default:\n            return state;\n    }\n};\n\nconst ContextStore = React.createContext(initialState);\n\nexport {\n    initialState,\n    reducer,\n    ContextStore\n};\n\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, FormControl, TextField, Toolbar, Typography } from '@material-ui/core';\n\n// import IconButton from '@material-ui/core/IconButton';\nimport { NavLink } from \"react-router-dom\";\n\nimport { ContextStore } from \"reducer\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flex: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flex: 1,\n    textAlign: 'center',\n    borderRadius: '10px'\n\n  },\n  active: {\n    background: 'rgba(0, 0, 0, 0.5)',\n    padding: \"5px\",\n    borderRadius: \"10px\"\n  },\n  amount: {\n    flex: 2,\n    marginLeft: \"10px\",\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const { state } = useContext(ContextStore);\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar>\n           <FormControl className={classes.amount}>\n            <TextField margin=\"normal\" label=\"零用金總額\" defaultValue=\"15000\" />\n          </FormControl>\n          <FormControl className={classes.amount}>\n            <TextField margin=\"normal\" label=\"現金餘額\" defaultValue=\"28\" />\n          </FormControl>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" className={classes.title}>\n            <NavLink className=\"announcement-data-name\" exact={true} activeClassName={classes.active} to=\"/add\">\n              新增\n            </NavLink>\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title}>\n            <NavLink className=\"announcement-data-name\" exact={true} activeClassName={classes.active} to=\"/list\">\n              列表\n            </NavLink>\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title}>\n            <NavLink className=\"announcement-data-name\" exact={true} activeClassName={classes.active} to=\"/setting\">\n              設定\n            </NavLink>\n          </Typography>\n         \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Nav from '../Nav'\nimport { withRouter } from \"react-router-dom\"\n// import ClipLoader from \"react-spinners/ClipLoader\";\n// components\n\n// style\nconst StyledLayout = styled.div`\nwidth:100%;\nheight: 100%;\n`;\nconst NavContainer = styled.div`\nposition: fixed;\ntop:0;\nleft:0;\nwidth:100%;\nz-index:99;\n`\nconst Container = styled.div`\nmargin-top:81px;\nwidth:100%;\nheight: calc(100% - 81px);\nbox-sizing:border-box;\n`\nexport default withRouter(({ children }) => {\n\n  return <StyledLayout>\n    <NavContainer>\n      <Nav/>\n    </NavContainer>\n\n    <Container>\n        {/* <ClipLoader/> */}\n      {children}\n    </Container>\n  </StyledLayout>;\n}\n)","\nimport * as firebase from 'firebase'\nimport firebaseConfig from \"./ApiKey\"\nimport defaultFetchFunc from \"./useFetchData\"\n\n\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n\n\n// login\nexport const apiLogin = (account, password) => {\n    return firebaseApp.auth().signInWithEmailAndPassword(account, password)\n}\n\nexport const apiTokenVerify = () => {\n    return firebase.auth().currentUser\n}\n\nexport const apiAddData = ({ account, sendData, cutoffMonth }) => {\n    return firebase.database().ref(`/cutoff/${account}/${cutoffMonth}`).push(sendData)\n\n}\n\nexport const apiEditData = ({account, sendData,cutoffMonth,key,originCutoffDate })=>{\n    firebase.database().ref(`/cutoff/${account}/${originCutoffDate}/${key}`).remove()\n    return firebase.database().ref(`/cutoff/${account}/${cutoffMonth}/${key}`).update(sendData)\n}\n\nexport const apiDeleteData = ({account, sendData,cutoffMonth,key })=>{\n    return firebase.database().ref(`/cutoff/${account}/${cutoffMonth}/${key}`).remove()\n}\n\nexport const apiGetData = ({ account, selectedMonth }) => {\n    return defaultFetchFunc({\n        api: firebase.database().ref(`/cutoff/${account}/${selectedMonth}`)\n    })\n    // return firebase.database().ref(`/cutoff/${account}/${selectedMonth}`)\n\n}","\nexport default {\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n    authDomain: \"cutoff-a0518.firebaseapp.com\",\n    databaseURL: \"https://cutoff-a0518.firebaseio.com\",\n    projectId: \"cutoff-a0518\",\n    storageBucket: \"cutoff-a0518.appspot.com\",\n    messagingSenderId: \"192068221825\",\n    appId: process.env.REACT_APP_MESSAGINGSENDERID,\n    measurementId: \"G-HGYC9DH7KR\"\n  };","import { useState } from \"react\"\nimport {List ,Map} from \"immutable\"\n\nexport default ({ api }) => {\n    const [fetchData, setfetchData] = useState(List())\n    const [isLoading, setIsLoading] = useState(false)\n    const fetchApiFunc = () => {\n        setIsLoading(true)\n        let array =[]\n        api.once(\"value\", (res) => {\n            const val = res.val()\n            for (const key in val) {\n                if (val.hasOwnProperty(key)) {\n                    const element = Map(val[key]).merge(Map({key}));\n                    array.push(element)\n                }\n            }\n            setfetchData(List(array))\n            setIsLoading(false)\n        })\n    }\n\n    return {\n        isLoading,\n        fetchApiFunc,\n        fetchData\n    }\n}\n\n","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\"\n\nimport { FormControl, TextField, Button, } from '@material-ui/core';\nimport { ContextStore } from \"reducer\"\n// import bgImg from 'assets/login.jpeg'\nimport { apiLogin } from \"customUses\"\n// util\nimport {abstractAccount} from \"Utils/tools\"\n\n// style\nconst StyledLogin = styled.div`\nwidth:100%;\nheight: 100%;\nbackground-image:url(\"assets/login.jpeg\");\nbackground-repeat: no-repeat;\nbackground-size: cover;\npadding-top:80px;\n.container{\n  width:70%;\n  /* height: 400px; */\n  /* border:1px solid #8bccf5; */\n  margin: 0 auto;\n  /* background:rgba(139,204,245,0.8); */\n  border-radius:10px;\n  padding:0 5%;\n  padding-bottom:30px;\n  box-sizing:border-box;\n  display: flex;\n  flex-direction:column;\n}\n`;\n\nexport default withRouter(({\n  history,\n}) => {\n  const [account, setAccount] = useState(localStorage.getItem(\"account\"))\n  const [password, setPassword] = useState(\"\")\n  const { dispatch } = useContext(ContextStore);\n\n  const onClickHandler = () => {\n    apiLogin(account, password).then((res) => {\n      localStorage.setItem(\"account\", account)\n      const accountName = abstractAccount(res.user.email)\n      dispatch({type:'INIT_USER', value:accountName})\n      history.push('/list')\n    }).catch((error) => {\n      alert(error)\n    })\n  }\n\n  return <StyledLogin>\n    <div className=\"container\">\n      <FormControl>\n        <TextField margin=\"normal\" label=\"帳號\" onChange={(event) => setAccount(event.target.value)} value={account}/>\n      </FormControl>\n      <FormControl>\n        <TextField margin=\"normal\" label=\"密碼\" type='password' onChange={event => setPassword(event.target.value)} />\n      </FormControl>\n      <Button color=\"primary\" margin=\"normal\" variant=\"contained\" onClick={onClickHandler}>登入</Button>\n\n    </div>\n  </StyledLogin>;\n}\n)","import React, { useEffect, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Select from '@material-ui/core/Select';\nimport { MenuItem, FormControl, InputLabel, TextField, Button, makeStyles } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    KeyboardDatePicker,\n    MuiPickersUtilsProvider\n} from '@material-ui/pickers';\nimport { withRouter } from \"react-router\";\n\n\nimport { apiAddData, apiEditData, apiDeleteData } from \"customUses\"\nimport moment from \"moment\"\nimport { ContextStore, newCutoffMonthArray } from \"reducer\"\n\n// style\nconst StyledAdd = styled.div`\npadding:0 10%;\nwidth:80%;\ndisplay: flex;\nflex-direction:column;\njustify-content:center;\noverflow-y:hidden;\n/* height:90%; */\n`;\n\nconst useStyles = makeStyles(theme => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n\n}));\n\nexport default withRouter(({ location: { pathname }, onModalClose,\n    fetchApiFunc\n}) => {\n    const { state, dispatch } = useContext(ContextStore);\n    const sendData = state.get(\"sendData\")\n    const account = state.get(\"account\")\n    const classes = useStyles();\n    const addType = state.get('addType')\n    const originCutoffDate = state.get(\"originCutoffDate\")\n\n    useEffect(() => {\n        if (pathname === \"/add\") {\n            dispatch({ type: 'INIT_SEND_DATA' })\n        }\n    }, [dispatch])\n\n    useEffect(() => {\n        // console.log(sendData.toJS());\n    }, [sendData, state])\n\n    const onSendHandler = () => {\n        const amount = sendData.get(\"amount\")\n        if (!validEmpty(amount)) return window.alert('金額為空');\n        if (!validNumber(amount)) return window.alert('金額不是數字');\n\n        const data = {\n            account,\n            cutoffMonth: sendData.get(\"cufoffMonth\"),\n            sendData: sendData.toJS()\n        }\n        if (addType === 'add') {\n            apiAddData(data).then(() => {\n                window.alert(\"新增成功\");\n                dispatch({ type: 'INIT_SEND_DATA' })\n\n            })\n        } else if (addType === 'edit') {\n            const key = sendData.get('key')\n            \n            const editData = {\n                account,\n                key,\n                originCutoffDate,\n                cutoffMonth: sendData.get(\"cufoffMonth\"),\n                sendData: sendData.delete('key').toJS()\n            }\n\n            apiEditData(editData).then(() => {\n                window.alert(\"修改成功\");\n                fetchApiFunc()\n                onModalClose()\n            })\n\n        }\n    }\n    const onDeleteHandler = () => {\n        const key = sendData.get('key')\n        const editData = {\n            account,\n            key,\n            cutoffMonth: sendData.get(\"cufoffMonth\")\n        }\n        apiDeleteData(editData).then(() => {\n            window.alert(\"刪除成功\");\n            fetchApiFunc()\n            onModalClose()\n        })\n\n    }\n    const validEmpty = (value) => {\n        return !!value ? true : false\n\n    }\n    const validNumber = (value) => {\n        return typeof Number(value) === 'number' ? true : false\n    }\n\n    const modifyAddSendData = (path, value) => {\n        dispatch({\n            type: 'MODIFYDATA', value: {\n                path: ['sendData', path], value\n            }\n        })\n    }\n\n    const handleDateChange = (path, date) => {\n        let formatDate = moment(date).format('YYYY-MM-D')\n        modifyAddSendData(path, formatDate)\n\n    };\n\n    const handleAmountChange = (amount) => {\n        modifyAddSendData('amount', amount)\n        const payType = sendData.get('payType')\n        if (payType === 0) modifyAddSendData('cash', amount)\n        if (payType === 1) modifyAddSendData('nonCash', amount)\n    }\n    const stopPropagationClick = (e) => {\n        e.stopPropagation()\n    }\n    return <StyledAdd onClick={(e) => stopPropagationClick(e)}>\n        <FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    disableToolbar\n                    format=\"yyyy/MM/dd\"\n                    margin=\"normal\"\n                    label=\"記帳日\"\n                    defaultValue={sendData.get('date')}\n                    value={sendData.get('date')}\n                    onChange={(date) => handleDateChange('date', date)}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n            </MuiPickersUtilsProvider>\n        </FormControl>\n        <FormControl  >\n            <InputLabel htmlFor=\"age-native-helper\">結帳月份</InputLabel>\n            <Select\n                label=\"種類\"\n                margin=\"normal\"\n                labelId=\"demo-controlled-open-select-label\"\n                value={sendData.get('cufoffMonth')}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={({ target }) =>  modifyAddSendData('cufoffMonth', target.value)}\n            >\n                {\n                    newCutoffMonthArray.map((month, index) =>\n                        <MenuItem value={month} key={index} > {`${month}`}</MenuItem>\n                    )\n                }\n            </Select>\n        </FormControl>\n        <FormControl  >\n            <InputLabel htmlFor=\"age-native-helper\">種類</InputLabel>\n            <Select\n                margin=\"normal\"\n                labelId=\"demo-controlled-open-select-label\"\n                value={sendData.get('payType')}\n                onChange={({ target }) => modifyAddSendData('payType', target.value)}\n            >\n                <MenuItem value={0}>現金</MenuItem>\n                <MenuItem value={1}>非現金</MenuItem>\n            </Select>\n        </FormControl>\n        <FormControl  >\n            <InputLabel htmlFor=\"age-native-helper\">代墊</InputLabel>\n            <Select\n                margin=\"normal\"\n                labelId=\"demo-controlled-open-select-label\"\n                value={sendData.get('advanced')}\n                onChange={({ target }) => modifyAddSendData('advanced', target.value)}\n            >\n                <MenuItem value={0}>否</MenuItem>\n                <MenuItem value={1}>是</MenuItem>\n            </Select>\n        </FormControl>\n        <FormControl>\n            <TextField margin=\"normal\"\n                label=\"項目\"\n                value={sendData.get('itemType')}\n                onChange={({ target }) => modifyAddSendData('itemType', target.value)} />\n        </FormControl>\n        <FormControl>\n            <TextField margin=\"normal\"\n                label=\"詳情\"\n                value={sendData.get('detail')}\n                onChange={({ target }) => modifyAddSendData('detail', target.value)}\n            />\n        </FormControl>\n        <FormControl>\n            <TextField margin=\"normal\"\n                type=\"tel\"\n                label=\"金額\"\n                value={sendData.get('amount')}\n\n                onChange={({ target }) => handleAmountChange(target.value)}\n            />\n        </FormControl>\n        <FormControl>\n            <Button color=\"primary\" className={classes.margin} margin=\"normal\" variant=\"contained\" onClick={() => onSendHandler()}>{addType === 'add' ? '新增' : '編輯'}</Button>\n            {addType === 'edit' ? <Button color=\"secondary\" onClick={() => window.confirm('確定刪除') && onDeleteHandler()}>刪除</Button> : null}\n        </FormControl>\n\n    </StyledAdd>;\n}\n)","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ContextStore,newCutoffMonthArray } from \"reducer\"\n\n// style\nconst StyledMonthPicker = styled.div`\nwidth:100%;\nmargin:0 auto;\ndisplay: flex;\njustify-content:center;\n.month{\n    padding:5px 8px;\n    cursor: pointer;\n    &-active{\n        background:rgba(63,82,181,0.9);\n        border-radius:3px;\n    }\n}\n`;\n\nexport default props => {\n    const { state, dispatch } = useContext(ContextStore);\n    const selectedMonth = state.get(\"selectedMonth\")\n    const handleMonthSelected = (month) => {\n        dispatch({ type: 'SET_SELECTED_MONTH', value: month })\n    }\n    return <StyledMonthPicker>\n        {newCutoffMonthArray.map((month, index) => <div key={index} className={month === selectedMonth ? \"month-active month\" : \"month\"} onClick={() => handleMonthSelected(month)}>{month}</div>)\n        }\n    </StyledMonthPicker>;\n};\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// style\nconst StyledSpinner = styled.div`\nwidth:100%;\ntext-align:center;\n\n`;\n\nexport default props => {\n\n  useEffect(() => { });\n\n  return <StyledSpinner>\n    <ClipLoader />\n  </StyledSpinner>;\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { CSSTransition } from 'react-transition-group';\nimport noop from 'lodash'\n// style\nconst StyledReactModal = styled.div`\n  /* width: 50%; */\n  width:100vw;\n  height:100vh;\n  position: fixed;\n  top:0;\n  left:0;\n  z-index:100;\n  background-color: rgba(0, 0, 0, 0.5);\n  overflow:auto;\n  visibility:${({ isOpen }) => isOpen ? 'visible' : 'hidden'};\n  transition:0.3s;\n  .wrapper{\n    width:90%;\n    margin:40px auto;\n    z-index:110;\n    background: #fff;\n    max-height:90vh;\n    overflow:auto;\n  }\n`;\nexport default ({\n  isOpen = false,\n  onModalClose = noop,\n  children\n}) => {\n  const escClick=useCallback(event=>{\n    if(event.keyCode ===27)onModalClose()\n  },[])\n  \n  useEffect(() => {\n    document.addEventListener('keydown', (event) => escClick(event), false)\n    return document.removeEventListener(\"keydown\",  (event) => escClick(event), false);\n  }, [])\n  return (\n    <StyledReactModal isOpen={isOpen} onClick = {onModalClose}>\n      <CSSTransition classNames='pop'\n        in={isOpen}\n        timeout={300}\n        unmountOnExit={true}\n      >\n        <div className='wrapper'>\n          {children}\n        </div>\n      </CSSTransition>\n    </StyledReactModal >\n  )\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Add from \"./Add\"\n// style\nconst StyledModifyList = styled.div`\npadding:20px;\nwidth:100%;\nheight:70%;\n`;\nexport default ({\n    children }) => {\n\n    return (\n        <StyledModifyList >\n            {children}\n        </StyledModifyList >\n    )\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport get from \"lodash/get\"\n// components\nimport { Table, TableBody, TableContainer, TableHead, TableRow, Paper, TableCell, makeStyles } from '@material-ui/core';\nimport MonthPicker from \"../MonthPicker\"\nimport StyledClipLoader from \"component/Styled/StyledSpinner\";\nimport StyledReactModal from \"component/Styled/StyledReactModal\"\nimport Add from \"./Add\"\nimport StyledModifyList from \"./ModifyList\"\n// api\nimport { apiGetData } from \"customUses\"\n\n// reducer\nimport { ContextStore } from \"reducer\"\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    \"max-height\": '80%',\n  },\n  isAdvanced: {\n    \"background\": \"#8792de\"\n  }\n});\n\nexport default props => {\n  const { state, dispatch } = useContext(ContextStore);\n  const account = state.get(\"account\")\n  const selectedMonth = state.get('selectedMonth')\n  const [openModal, setOpenModal] = useState(false);\n\n  const { isLoading, fetchApiFunc, fetchData } = apiGetData({ account, selectedMonth })\n\n  useEffect(() => {\n    fetchApiFunc()\n  }, [account, selectedMonth]);\n\n  useEffect(() => {\n    // console.log(fetchData.toJS());  \n  }, [fetchData])\n\n  const classes = useStyles();\n\n\n  const calculaAmount = () => {\n    let totalCash = 0\n    let totalNonCach = 0\n    let totalAmount = 0\n    fetchData.map(list => {\n      const cash = Number(list.get(\"cash\"))\n      const nonCash = Number(list.get(\"nonCash\"))\n      const amount = Number(list.get(\"amount\"))\n      totalCash = totalCash + cash\n      totalNonCach = totalNonCach + nonCash\n      totalAmount = totalAmount + amount\n      return list\n    })\n\n    return {\n      totalCash,\n      totalNonCach,\n      totalAmount\n    }\n  }\n\n  const modalOpenhandler= (data)=>{\n    setOpenModal(true)\n    const cufoffMonth =data.get(\"cufoffMonth\")\n    dispatch({type:'INIT_MODAL_OPEN', data, cufoffMonth})\n  }\n\n  return <>\n\n    <MonthPicker />\n    <TableContainer component={Paper} className={classes.table}>\n      <Table size=\"small\" aria-label=\"a dense table\" stickyheader stickyfooter>\n        <TableHead>\n          <TableRow>\n            <TableCell>時間</TableCell>\n            <TableCell align=\"left\">項目</TableCell>\n            <TableCell align=\"left\">現金</TableCell>\n            <TableCell align=\"left\">非現金</TableCell>\n\n          </TableRow>\n        </TableHead>\n\n        {isLoading && <TableCell colSpan={4}>  <StyledClipLoader /></TableCell>}\n\n        <TableBody>\n          {fetchData.map((row, index) => (\n            <TableRow key={index} className={row.get('advanced') ? classes['isAdvanced'] : null}  onClick={()=>modalOpenhandler(row)}>\n              <TableCell align=\"left\" component=\"th\">{row.get('date')}</TableCell>\n              <TableCell align=\"left\" >{row.get(\"itemType\")}</TableCell>\n              <TableCell align=\"left\">{row.get('cash')}</TableCell>\n              <TableCell align=\"left\">{row.get('nonCash')}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <TableContainer>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell rowSpan={1} component=\"th\" scope=\"row\"></TableCell>\n            <TableCell align=\"right\" colSpan={3}>{get(calculaAmount(), 'totalCash')}</TableCell>\n            <TableCell align=\"center\">{get(calculaAmount(), 'totalNonCach')}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell rowSpan={1} component=\"th\" scope=\"row\"></TableCell>\n            <TableCell align=\"left\" colSpan={3}>總花費</TableCell>\n            <TableCell align=\"center\">{get(calculaAmount(), 'totalAmount')}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    <StyledReactModal isOpen={openModal} onModalClose={() => setOpenModal(false)}>\n        <Add onModalClose={() => setOpenModal(false)}  fetchApiFunc={fetchApiFunc}/>\n      </StyledReactModal>\n  </>\n};\n","import React, { useContext } from \"react\";\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\n// components\nimport Layout from \"component/pages/Layout\";\nimport LoginPage from \"component/pages/Login\";\nimport Add from \"component/pages/Add\";\nimport List from \"component/pages/List\";\n\nimport { firebaseApp } from \"customUses\"\nimport { ContextStore } from \"reducer\"\nimport { abstractAccount } from \"Utils/tools\"\n\n\nconst Routes = () => (\n\n    <Switch>\n        <Route exact path=\"/login\" render={() => <LoginPage />} />\n        <Layout>\n            <Route exact path=\"/add\" render={() => <Add />} />\n            <Route exact path=\"/list\" render={() => <List />} />\n        </Layout>\n        <Redirect from=\"/\" to=\"/login\" />\n    </Switch>\n\n);\n\nexport default withRouter(({ history, location }) => {\n    const { dispatch } = useContext(ContextStore);\n    const pathName = location.pathname\n    firebaseApp.auth().onAuthStateChanged((user) => {\n        if (!!user) dispatch({ type: \"INIT_USER\", value: abstractAccount(user.email) })\n        if (!!user && pathName === \"/login\") {\n            history.push('/list')\n        } else if (!user && pathName !== \"/login\") {\n            history.push('/login')\n        }\n    })\n    return (\n        <Routes />\n    );\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useReducer } from \"react\";\nimport { HashRouter } from \"react-router-dom\";\n\n// components\nimport Routes from \"./Routes\";\nimport {version} from \"../package.json\"\n//reducer\nimport { reducer, initialState, ContextStore } from 'reducer';\n\nexport default () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n\n  return (\n    <ContextStore.Provider value={{ state, dispatch }}>\n      <div version={version}/>\n      <HashRouter>\n        <Routes />\n      </HashRouter>\n    </ContextStore.Provider>\n  );\n}\n\n\n\n"],"sourceRoot":""}